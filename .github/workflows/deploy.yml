name: Deploy WordPress

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-2 # e.g., us-east-1   
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_INSTANCE_SG_ID: sg-00a2f6fb60a283303

    steps:
      - name: Get Runner IP address
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Whitelist Runner IP address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ env.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: SSH into EC2
        uses: appleboy/ssh-action@master
        with:
          host: 18.222.233.125
          username: ubuntu  # or ec2-user, depending on your AMI
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "Connection successful"
            whoami
            pwd
            
      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v ubuntu@18.222.233.125 "echo 'SSH connection successful!'"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to server
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: 18.222.233.125
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Production
        run: |
          wo site update 18.222.233.125 --force

      - name: Clear WordPress Cache
        run: |
          wp cache flush

      - name: Revoke Runner IP address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ env.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32